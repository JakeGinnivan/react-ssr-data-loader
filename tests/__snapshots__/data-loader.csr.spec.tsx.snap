exports[`Client side render client render after SSR with data should not fetch data 1`] = `
Object {
  "loadAllCompletedCalled": 0,
  "loadDataCount": 0,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 1,
  "renderProps": Object {
    "data": Object {
      "data": Object {
        "result": "Success!",
      },
      "dataFromServerSideRender": true,
      "hasData": true,
    },
    "lastAction": Object {
      "success": true,
      "type": "initial-fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render loads data when props change 1`] = `
Object {
  "loadAllCompletedCalled": 2,
  "loadDataCount": 2,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 4,
  "renderProps": Object {
    "data": Object {
      "data": Object {
        "result": "Success2!",
      },
      "dataFromServerSideRender": false,
      "hasData": true,
    },
    "lastAction": Object {
      "success": true,
      "type": "initial-fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render should ignore completion once component is unmounted 1`] = `
Object {
  "loadAllCompletedCalled": 1,
  "loadDataCount": 1,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 1,
  "renderProps": Object {
    "data": Object {
      "hasData": false,
    },
    "lastAction": Object {
      "success": true,
      "type": "none",
    },
    "status": "Fetching",
  },
}
`;

exports[`Client side render should pass failure when data load fails 1`] = `
Object {
  "loadAllCompletedCalled": 1,
  "loadDataCount": 1,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 2,
  "renderProps": Object {
    "data": Object {
      "hasData": false,
    },
    "lastAction": Object {
      "error": "Error when loading testDataType testKey: Boom!",
      "success": false,
      "type": "initial-fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render should pass loaded data once promise resolves 1`] = `
Object {
  "loadAllCompletedCalled": 1,
  "loadDataCount": 1,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 2,
  "renderProps": Object {
    "data": Object {
      "data": Object {
        "result": "Success!",
      },
      "dataFromServerSideRender": false,
      "hasData": true,
    },
    "lastAction": Object {
      "success": true,
      "type": "initial-fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render should remove data from redux when unmounted 1`] = `
Object {
  "loadAllCompletedCalled": 1,
  "loadDataCount": 1,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 2,
  "renderProps": Object {
    "data": Object {
      "data": Object {
        "result": "Success!",
      },
      "dataFromServerSideRender": false,
      "hasData": true,
    },
    "lastAction": Object {
      "success": true,
      "type": "initial-fetch",
    },
    "status": "Idle",
  },
}
`;

exports[`Client side render should start loading data if not loaded 1`] = `
Object {
  "loadAllCompletedCalled": 0,
  "loadDataCount": 1,
  "renderActions": Object {
    "refresh": [Function],
  },
  "renderCount": 1,
  "renderProps": Object {
    "data": Object {
      "hasData": false,
    },
    "lastAction": Object {
      "success": true,
      "type": "none",
    },
    "status": "Fetching",
  },
}
`;
